<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="com.springdemo.mapping.userMapper"就是com.springdemo.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.springboot.dao.UserMapper">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    ，resultType属性指明查询返回的结果集类型
    resultType="com.springdemo.model.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    <resultMap id="BaseResultMap" type="com.springboot.model.User">
        <result column="id" jdbcType="VARCHAR" property="uid" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="password" jdbcType="VARCHAR" property="password" />
    </resultMap>

    <!--判断用户名是否存在-->
    <select id="selectUserName" resultType="Integer">
        select count(1) from test.t_user where name = #{name}
    </select>

    <!-- 根据_key查询得到一个user对象-->
    <select id="checkLoginUser" parameterType="com.springboot.model.User"
            resultType="com.springboot.model.User"> <!-- 创建对应user实体类的位置 -->
        select * from test.t_user where name=#{name} and password = #{password};
    </select>

    <insert id="registUser">
        insert into test.t_user(id,name,password) value (#{uid},#{name},#{password});
    </insert>

    <select id="selectUser"
            resultType="com.springboot.model.User"> <!-- 创建对应user实体类的位置 -->
        select * from test.t_user where id=#{uid};
    </select>

    <!--加好友-->
    <insert id="insertFriend" parameterType="com.springboot.model.User">
        insert into test.t_friend value (#{uid},#{fid},2)
    </insert>

    <!--查找好友-->
    <select id="selectFriend" resultType="Integer" parameterType="com.springboot.model.User">
        select count(1) from test.t_friend where uid=#{uid} and fid=#{fid} and status = 1
    </select>

    <!--删除好友-->
    <delete id="deleteFriend" parameterType="com.springboot.model.User">
        delete from test.t_friend where uid=#{uid} and fid=#{fid}
    </delete>

    <!--显示好友-->
    <select id="showFriend" resultMap="BaseResultMap" parameterType="String">
        select u.id,name from t_friend f join t_user u on f.fid = u.id where f.uid=#{id} and status = 1
    </select>

    <!--确认好友-->
    <update id="queryFriend" parameterType="String">
        update t_friend set status = 1 where fid = #{fid}
    </update>
    
    <!--检查申请好友请求-->
    <select id="selectQueryFriend" parameterType="String" resultMap="BaseResultMap">
        select u.id,name from t_friend f join t_user u on f.uid = u.id where fid=#{id} and status=2
    </select>

    <!--删除好友申请-->
    <delete id="deleteQueryFriend" parameterType="String">
        delete from t_friend where fid=#{id} and status = 2
    </delete>
</mapper>